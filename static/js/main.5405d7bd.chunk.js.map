{"version":3,"sources":["serviceWorker.js","components/Card.js","components/CardList.js","components/Fixed.js","containers/SearchField.js","containers/GenChooser.js","containers/App.js","containers/DetailPage.js","containers/Home.js","index.js"],"names":["Boolean","window","location","hostname","match","withRouter","props","name","url","className","onClick","fetch","then","res","json","data","history","push","pathname","state","substring","indexOf","length","id","height","weight","moves","type","alt","src","CardList","str","this","cardinfo","map","m","key","Component","Fixed","style","overflowY","borderTop","marginTop","children","SearchField","onChange","search","placeholder","GenChooser","change","App","onSearch","e","setState","target","value","console","log","onChoose","innerText","filterPoke","filter","card","toLowerCase","includes","DetailPage","marginBottom","fontSize","tab","String","Home","exact","path","component","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5405d7bd.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport \"./Card.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\n// import { Redirect } from \"react-router-dom\";\r\n\r\nconst Card = (props) => {\r\n  const clickHandler = () => {\r\n    fetch(url)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        props.history.push({\r\n          pathname: \"/DetailPage\",\r\n          state: {\r\n            url: `https://pokeres.bastionbot.org/images/pokemon/${props.url.substring(\r\n              props.url.indexOf(\"pokemon/\") + 8,\r\n              props.url.length - 1\r\n            )}.png`,\r\n            name: data[\"name\"],\r\n            id: data[\"id\"],\r\n            height: data[\"height\"],\r\n            weight: data[\"weight\"],\r\n            moves: data[\"moves\"],\r\n            type: data[\"types\"],\r\n          },\r\n        });\r\n      });\r\n  };\r\n  const { name, url } = props;\r\n  return (\r\n    <div className=\"Card\" onClick={clickHandler}>\r\n      <img\r\n        className=\"img\"\r\n        alt=\"poke\"\r\n        src={`https://pokeres.bastionbot.org/images/pokemon/${url.substring(\r\n          url.indexOf(\"pokemon/\") + 8,\r\n          url.length - 1\r\n        )}.png`}\r\n      ></img>\r\n      <h1 className=\"name\">{name}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Card);\r\n","import React, { Component } from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nclass CardList extends Component {\r\n  helper(str) {}\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.cardinfo.map((m) => (\r\n          <Card name={m[\"name\"]} url={m[\"url\"]} key={m[\"name\"]} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\n\r\nconst Fixed = (props) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        overflowY: \"scroll\",\r\n        height: \"800px\",\r\n        borderTop: \"2px solid black\",\r\n        marginTop: \"10px\",\r\n      }}\r\n      className=\"Fixed\"\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\nexport default Fixed;\r\n","import React from \"react\";\r\nimport \"./SearchField.css\";\r\n\r\nconst SearchField = (props) => {\r\n  return (\r\n    <input\r\n      className=\"input\"\r\n      type=\"search\"\r\n      onChange={props.search}\r\n      placeholder=\"Search for Pokemon\"\r\n    ></input>\r\n  );\r\n};\r\n\r\nexport default SearchField;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\n\r\nconst GenChooser = (props) => {\r\n  return (\r\n    <div>\r\n      <div className=\"Choose\">Choose Generation</div>\r\n      <div onClick={props.change} className=\"Gen\">\r\n        1\r\n      </div>\r\n      <div onClick={props.change} className=\"Gen\">\r\n        2\r\n      </div>\r\n      <div onClick={props.change} className=\"Gen\">\r\n        3\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GenChooser;\r\n","import React, { Component } from \"react\";\nimport CardList from \"../components/CardList\";\nimport Fixed from \"../components/Fixed\";\nimport \"./App.css\";\nimport SearchField from \"./SearchField\";\nimport GenChooser from \"./GenChooser\";\n\nclass App extends Component {\n  state = {\n    cardinfo: [],\n    search: \"\",\n  };\n\n  componentDidMount() {\n    fetch(\"https://pokeapi.co/api/v2/pokemon?limit=151\")\n      .then((res) => res.json())\n      .then((data) =>\n        this.setState({\n          cardinfo: data[\"results\"],\n          filterPoke: data[\"results\"],\n        })\n      );\n  }\n\n  onSearch = (e) => {\n    this.setState({\n      search: e.target.value,\n    });\n    console.log(this.props);\n  };\n\n  onChoose = (e) => {\n    if (e.target.innerText === \"2\") {\n      fetch(\"https://pokeapi.co/api/v2/pokemon?offset=151&limit=100\")\n        .then((res) => res.json())\n        .then((data) =>\n          this.setState({\n            cardinfo: data[\"results\"],\n            filterPoke: data[\"results\"],\n          })\n        );\n    }\n    if (e.target.innerText === \"1\") {\n      fetch(\"https://pokeapi.co/api/v2/pokemon?limit=151\")\n        .then((res) => res.json())\n        .then((data) =>\n          this.setState({\n            cardinfo: data[\"results\"],\n            filterPoke: data[\"results\"],\n          })\n        );\n    }\n    if (e.target.innerText === \"3\") {\n      fetch(\"https://pokeapi.co/api/v2/pokemon?offset=251&limit=135\")\n        .then((res) => res.json())\n        .then((data) =>\n          this.setState({\n            cardinfo: data[\"results\"],\n            filterPoke: data[\"results\"],\n          })\n        );\n    }\n  };\n\n  render() {\n    const filterPoke = this.state.cardinfo.filter((card) => {\n      return card[\"name\"]\n        .toLowerCase()\n        .includes(this.state.search.toLowerCase());\n    });\n    return (\n      <div className=\"App\">\n        <h1 className=\"h1\">My Pokedex App</h1>\n        <SearchField search={this.onSearch} />\n        <GenChooser change={this.onChoose} />\n        <Fixed>\n          <CardList cardinfo={filterPoke} />\n        </Fixed>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from \"react\";\r\nimport \"./DetailPage.css\";\r\n\r\nclass DetailPage extends Component {\r\n  componentDidMount() {\r\n    console.log(this.props.history.location[\"state\"][\"url\"]);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Detail\">\r\n        <img alt=\"poke\" src={this.props.history.location[\"state\"][\"url\"]} />\r\n        <div className=\"pokeCard\">\r\n          <h1 style={{ marginBottom: \"30px\", fontSize: \"40px\" }}>\r\n            {this.props.history.location[\"state\"][\"name\"]}\r\n          </h1>\r\n          <h3 style={{ marginBottom: \"30px\", fontSize: \"30px\" }}>\r\n            #{this.props.history.location[\"state\"][\"id\"]}\r\n          </h3>\r\n          <h3 style={{ marginBottom: \"30px\", fontSize: \"30px\" }}>\r\n            Height : {this.props.history.location[\"state\"][\"height\"]} ft\r\n          </h3>\r\n          <h3 style={{ marginBottom: \"30px\", fontSize: \"30px\" }}>\r\n            Weight : {this.props.history.location[\"state\"][\"weight\"]} lbs\r\n          </h3>\r\n          <h3>\r\n            Types :\r\n            {this.props.history.location[\"state\"][\"type\"].map((m) => {\r\n              return tab(m[\"type\"][\"name\"]);\r\n            })}\r\n          </h3>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DetailPage;\r\n\r\nconst tab = (String) => {\r\n  return <span className=\"Tab\">{String}</span>;\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport DetailPage from \"./DetailPage\";\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Route exact path=\"/pokedex\" component={App} />\r\n        <Route exact path=\"/DetailPage\" component={DetailPage} />\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n// import App from \"./containers/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Home from \"./containers/Home\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Home />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}